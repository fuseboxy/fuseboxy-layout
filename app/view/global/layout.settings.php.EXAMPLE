<?php /*
<fusedoc>
	<io>
		<in />
		<out>
			<structure name="$layout">
				<string name="metaTitle" comments="showing at browser tab" />
				<string name="logo|brand" optional="yes" />
				<structure name="logo|brand" optional="yes">
					<string name="~breakpoint~" comments="empty is the default" />
				</structure>
			</structure>
			<structure name="nav|navRight" scope="$arguments">
				<string name="name" />
				<string name="url" optinonal="yes" />
				<boolean name="active" optional="yes" />
				<string name="remark" optinonal="yes" />
				<boolean name="disabled" optional="yes" />
				<boolean name="newWindow" optional="yes" />
				<!-- custom styling -->
				<string name="class" optional="yes" />
				<string name="style" optional="yes" />
				<string name="linkClass" optional="yes" />
				<string name="linkStyle" optional="yes" />
				<!-- utilities for dropdown -->
				<string name="navHeader" optional="yes" />
				<array name="divider" optional="yes">
					<string name="+" comments="before|after" />
				</array>
				<!-- sub menu (if any) -->
				<array name="menus" optional="yes" />
			</structure>
		</out>
	</io>
</fusedoc>
*/
// html title
$layout['metaTitle'] = '';


// brand name
$layout['logo'] = '';
$layout['brand'] = '';


// left menu
$arguments['nav'] = array(
	array('name' => 'Home', 'url' => F::url('home'), 'active' => F::is('home.*')),
);


// right menu
$arguments['navRight'] = array(
	// settings
	( class_exists('Auth') and Auth::activeUserInRole('SUPER,ADMIN') ) ? array(
		'name' => '<i class="fa fa-cog"></i>',
		'menus' => array(
			array('navHeader' => 'SETTINGS', 'divider' => 'after'),
			array('name' => 'User Management', 'url' => F::url('user'), 'active' => F::is('user.*')),
			array('name' => 'System Settings', 'url' => F::url('enum'), 'active' => F::is('enum.*')),
			array('name' => 'Audit Log',      'url' => F::url('log'),  'active' => F::is('log.*')),
		),
	) : false,
	// user-sim
	( class_exists('Sim') and class_exists('Auth') and Auth::userInRole('SUPER') ) ? call_user_func(function(){
		$simMenus = array( array('navHeader' => 'USER SIMULATION') );
		$simUsers = R::find('user', "id != ? AND role != 'SUPER' AND IFNULL(disabled, 0) = 0 ORDER BY role, username", array(Auth::user('id')));
		$prev = false;
		foreach ( $simUsers as $u ) {
			if ( empty($prev) or $prev->role != $u->role ) $simMenus[] = array('navHeader' => "<small>{$u->role}</small>", 'divider' => 'before');
			$simMenus[] = array('name' => $u->username, 'url' => F::url("auth.start-sim&user_id={$u->id}"), 'active' => (Sim::user('username') == $u->username));
			$prev = $u;
		}
		if ( Sim::user() ) $simMenus[] = array('name' => '<i class="fa fa-sign-out-alt"></i> End Sim', 'url' => F::url('sim.end'), 'divider' => 'before');
		return $simUsers ? array(
			'name' => '<i class="fa fa-mask"></i>'.( Sim::user() ? ' ' : '' ).Sim::user('username'),
			'menus' => $simMenus,
			'active' => Sim::user(),
			'linkClass' => Sim::user() ? 'text-primary' : false,
		) : false;
	}) : false,
	// logout
	( class_exists('Auth') and Auth::user()  ) ? array(
		'name' => '<i class="fa fa-user"></i>',
		'menus' => array(
			array('navHeader' => Auth::user('username'), 'divider' => 'after'),
			array('name' => 'Update Profile', 'url' => F::url('account.profile'), 'active' => F::is('account.profile')),
			array('name' => 'Change Password', 'url' => F::url('account.password'), 'active' => F::is('account.password')),
			array('name' => '<i class="fa fa-power-off"></i> Sign Out', 'url' => F::url('auth.logout'), 'divider' => 'before'),
		),
	) : false,
);